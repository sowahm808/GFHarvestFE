rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isParent(doc) {
      return request.auth != null && request.auth.uid == doc.data.parentId;
    }

    function isChild(doc) {
      return request.auth != null && request.auth.uid == doc.data.childId;
    }

    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    match /parentChildLinks/{linkId} {
      allow read: if request.auth != null && (isParent(resource) || isChild(resource));
      allow write: if request.auth != null && request.auth.uid == request.resource.data.parentId;
    }

    // Links between mentors and children
    match /mentorChildLinks/{linkId} {
      // Allow either participant to read the relationship
      allow read: if request.auth != null &&
        (request.auth.uid == resource.data.childId || request.auth.uid == resource.data.mentorId);
      // Children (or admins) may create a link for themselves
      allow create: if request.auth != null &&
        (request.auth.uid == request.resource.data.childId || isAdmin());
      allow update, delete: if false;
    }

    match /dailyCheckins/{docId} {
      allow read: if isParent(resource) || isChild(resource);
      allow create: if isChild(request.resource);
      allow update, delete: if false;
    }

    match /mentalStatus/{docId} {
      allow read: if isParent(resource) || isChild(resource);
      allow create: if isChild(request.resource);
      allow update, delete: if false;
    }

    match /bibleQuizzes/{docId} {
      allow read: if isParent(resource) || isChild(resource);
      allow create: if isChild(request.resource);
      allow update, delete: if false;
    }

    match /essays/{docId} {
      allow read: if isParent(resource) || isChild(resource);
      allow create: if isChild(request.resource);
      allow update, delete: if false;
    }

    match /schoolWork/{docId} {
      allow read: if isParent(resource) || isChild(resource);
      allow create: if isChild(request.resource);
      allow update, delete: if false;
    }

    match /projects/{docId} {
      allow read: if isParent(resource) || isChild(resource);
      allow create: if isChild(request.resource);
      allow update, delete: if false;
    }

    match /bibleQuestions/{docId} {
      allow read: if request.auth != null;
      allow write: if false;
    }

    match /userStats/{userId} {
      // Any authenticated user can read leaderboard data
      allow read: if request.auth != null;
      // Child account or admins may update stats
      allow create, update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow delete: if false;
    }

    match /mentorRecords/{docId} {
      // Child linked to the record or the mentor who created it may read
      allow read: if request.auth != null &&
        (request.auth.uid == resource.data.childId || request.auth.uid == resource.data.mentorId);
      // Only the mentor who created the record (or admins) may add new ones
      allow create: if request.auth != null &&
        (request.auth.uid == request.resource.data.mentorId || isAdmin());
      allow update, delete: if false;
    }
  }
}
